openapi: 3.0.0
servers: []
info:
  description: The simple back API of SYP
  version: "1.0.0"
  title: SYP API
  contact:
    email: syp@shareyourproject.fr
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
tags:
  - name: Authentication
    description: For authentication purposes
paths:
  /login:
    post:
      tags:
        - Authentication
      summary: Authenticate an existing user
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
              required:
                - password
                - email
      responses:
        '200':
          description: User authenticated
        '422':
          description: Invalid form
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FormError'
        '401':
          description: Invalid credentials
  /register:
    post:
      tags:
        - Authentication
      summary: Authenticate and create a new user
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                username:
                  type: string
                first_name:
                  type: string
                last_name:
                  type: string
                email:
                  type: string
                password:
                  type: string
                password_confirmation:
                  type: string
              required:
                - password
                - password_confirmation
                - email
                - first_name
                - last_name
                - username
      responses:
        '200':
          description: User created and authenticated
        '422':
          description: Invalid form
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FormError'
  /user:
    get:
      security:
        - cookieAuth: []
      tags:
        - Authentication
      summary: Get the current authenticated user
      responses:
        '200':
          description: User created and authenticated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '401':
          description: Unauthorized

  /feed:
    get:
      tags:
        - Post
      summary: Get the post in the user feed
      responses:
        '200':
          description: User created and authenticated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeedResponse'
        '401':
          description: Unauthorized


  /post/{postId}/like:
    put:
      security:
        - cookieAuth: []
      tags:
        - Post
      parameters:
        - in: path
          name: postId
          schema:
            type: integer
          required: true
          description: Numeric ID of the post to like
      summary: Like the current post
      responses:
        '200':
          description: Post has been edited
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Post'
        '404':
          description: Post not found
        '401':
          description: Unauthenticated

  /post/{postId}/unlike:
    put:
      security:
        - cookieAuth: []
      tags:
        - Post
      parameters:
        - in: path
          name: postId
          schema:
            type: integer
          required: true
          description: Numeric ID of the post to unlike
      summary: Unlike the current post
      responses:
        '200':
          description: Post has been edited
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Post'
        '404':
          description: Post not found
        '401':
          description: Unauthenticated

components:
  securitySchemes:
    cookieAuth:
      type: apiKey
      in: cookie
      name: share_your_project_session
  schemas:
    FormError:
      type: object
      required:
        - message
        - errors
      properties:
        message:
          type: string
        errors:
          type: object
    User:
      type: object
      required:
        - id
        - username
        - first_name
        - last_name
        - email
        - email_verified_at
        - is_admin
        - bio
        - banner_picture
        - profile_picture
        - title
        - updated_at
        - created_at
      properties:
        id:
          type: number
        username:
          type: string
        first_name:
          type: string
        last_name:
          type: string
        email:
          type: string
        email_verified_at:
          type: string
        is_admin:
          type: boolean
        bio:
          type: string
        banner_picture:
          type: string
        profile_picture:
          type: string
        title:
          type: string
        updated_at:
          type: string
        created_at:
          type: string

    Post:
      type: object
      properties:
        id:
          type: number
        author_id:
          type: number
        content:
          type: string
        created_at:
          type: string
          format: date
        project_id:
          type: number
        shared_post:
          type: boolean
        updated_at:
          type: string
          format: date

    FeedResponse:
      type: object
      properties:
        current_page:
          type: number
        data:
          type: array
          items:
            $ref: '#/components/schemas/Post'
        first_page_url:
          type: string
        from:
          type: number
        last_page:
          type: number
        last_page_url:
          type: number
        links:
          type: array
          items:
            type: object
        next_page_url:
          type: string
        path:
          type: string
        per_page:
          type: number
        prev_page_url:
          type: string
        to:
          type: number
        total:
          type: number
